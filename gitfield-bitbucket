#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# ╭───────────────────────────────╮
# │         CONFIG & PATHS        │
# ╰───────────────────────────────╯
REMOTE_NAME="bitbucket"
REPO_NAME=$(basename "$(pwd)")
BB_USER="mrhavens"
DEFAULT_NAME="Mark Randall Havens"
DEFAULT_EMAIL="mark.r.havens@gmail.com"
APP_PASS_FILE="$HOME/.bitbucket_app_password"

# ╭───────────────────────────────╮
# │            LOGGING            │
# ╰───────────────────────────────╯
info()  { echo -e "\e[1;34m[INFO]\e[0m $*"; }
warn()  { echo -e "\e[1;33m[WARN]\e[0m $*"; }
error() { echo -e "\e[1;31m[ERROR]\e[0m $*" >&2; exit 1; }

# ╭───────────────────────────────╮
# │     GIT + SSH PREREQUISITES   │
# ╰───────────────────────────────╯
info "Checking prerequisites..."
sudo apt update -qq
sudo apt install -y git openssh-client curl jq || error "Install failed"

git config --global user.name "$DEFAULT_NAME"
git config --global user.email "$DEFAULT_EMAIL"
info "Git identity: $DEFAULT_NAME <$DEFAULT_EMAIL>"

# ╭───────────────────────────────╮
# │         SSH KEY SETUP         │
# ╰───────────────────────────────╯
if [ ! -f "$HOME/.ssh/id_rsa" ]; then
  info "Generating new SSH key..."
  ssh-keygen -t rsa -b 4096 -C "$DEFAULT_EMAIL" -f "$HOME/.ssh/id_rsa" -N ""
fi

eval "$(ssh-agent -s)"
ssh-add "$HOME/.ssh/id_rsa"

info "Testing SSH connection to Bitbucket..."
if ! ssh -T git@bitbucket.org 2>&1 | grep -q "authenticated"; then
  PUBKEY=$(<"$HOME/.ssh/id_rsa.pub")
  info "❗ SSH connection not verified."
  echo -e "\n🔐 Add this public key to your Bitbucket account:\n"
  echo "$PUBKEY"
  echo -e "\n→ https://bitbucket.org/account/settings/ssh-keys/"
  exit 1
fi

# ╭───────────────────────────────╮
# │     APP PASSWORD SETUP        │
# ╰───────────────────────────────╯
if [ ! -f "$APP_PASS_FILE" ]; then
  echo -e "\n🔐 Create a Bitbucket App Password with:"
  echo "  ✅ permissions: Repositories (Read+Write), SSH, and Webhooks"
  echo "  🔗 https://bitbucket.org/account/settings/app-passwords/\n"
  read -rsp "Paste your Bitbucket App Password: " BB_APP_PASS
  echo "$BB_APP_PASS" > "$APP_PASS_FILE"
  chmod 600 "$APP_PASS_FILE"
  echo
else
  BB_APP_PASS=$(<"$APP_PASS_FILE")
fi

# ╭───────────────────────────────╮
# │       BITBUCKET API CALL      │
# ╰───────────────────────────────╯
API_URL="https://api.bitbucket.org/2.0/repositories/$BB_USER/$REPO_NAME"

REPO_EXISTS=$(curl -s -u "$BB_USER:$BB_APP_PASS" "$API_URL" | jq -r .type || echo "none")
if [[ "$REPO_EXISTS" != "repository" ]]; then
  info "Creating Bitbucket repository '$REPO_NAME' via API..."
  curl -s -X POST "$API_URL" \
    -u "$BB_USER:$BB_APP_PASS" \
    -H "Content-Type: application/json" \
    -d "{\"scm\": \"git\", \"is_private\": false, \"project\": {\"key\": \"~$BB_USER\"}}" |
    grep -q "\"type\": \"repository\"" || warn "⚠️ Repo may already exist or failed to create (HTTP 401)"
else
  info "Bitbucket repository already exists."
fi

REMOTE_URL="git@bitbucket.org:$BB_USER/$REPO_NAME.git"
if ! git remote get-url "$REMOTE_NAME" &>/dev/null; then
  git remote add "$REMOTE_NAME" "$REMOTE_URL"
  info "Remote added: $REMOTE_NAME → $REMOTE_URL"
else
  info "Remote already set: $REMOTE_NAME → $(git remote get-url "$REMOTE_NAME")"
fi

# ╭───────────────────────────────╮
# │         GIT INITIALIZATION    │
# ╰───────────────────────────────╯
if [ ! -d .git ]; then
  git init
  git add . || warn "Nothing to add"
  git commit -m "Initial commit" || warn "Nothing to commit"
  info "Git repository initialized and committed"
fi

if ! git rev-parse HEAD &>/dev/null; then
  git add . && git commit -m "Initial commit"
fi

# ╭───────────────────────────────╮
# │       COMMIT + PUSH LOGIC     │
# ╰───────────────────────────────╯
if ! git diff --quiet || ! git diff --cached --quiet; then
  git add .
  git commit -m "Update: $(date '+%Y-%m-%d %H:%M:%S')" || warn "Nothing to commit"
else
  info "No uncommitted changes."
fi

BRANCH=$(git rev-parse --abbrev-ref HEAD)
if ! git config --get branch."$BRANCH".remote &>/dev/null; then
  info "Pushing with upstream..."
  git push -u "$REMOTE_NAME" "$BRANCH" || error "Push failed"
else
  info "Pushing to $REMOTE_NAME/$BRANCH..."
  git push "$REMOTE_NAME" "$BRANCH" || error "Push failed"
fi

info "✓ Bitbucket push completed successfully."
