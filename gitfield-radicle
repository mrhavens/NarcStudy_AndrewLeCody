#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# ╭───────────────────────────────╮
# │         Config & Paths        │
# ╰───────────────────────────────╯
PROJECT_NAME=$(basename "$(pwd)")
DEFAULT_NAME="Mark Randall Havens"
DEFAULT_EMAIL="mark.r.havens@gmail.com"

RAD_HOME="$HOME/.radicle"
RAD_BIN="$RAD_HOME/bin/rad"
RAD_KEYS="$RAD_HOME/keys.json"
RAD_BACKUP=".radicle-backup/keys.json"
RAD_CONFIG="$RAD_HOME/config.json"
PROFILE_FILE="$HOME/.bashrc"
PUSH_STATE_FILE=".radicle-push-state"
SEED_DOMAIN="kairos-seed.thefoldwithin.earth"

# ╭───────────────────────────────╮
# │         Logging Utils         │
# ╰───────────────────────────────╯
info()  { echo -e "\e[1;34m[INFO]\e[0m $*"; }
warn()  { echo -e "\e[1;33m[WARN]\e[0m $*"; }
error() { echo -e "\e[1;31m[ERROR]\e[0m $*" >&2; exit 1; }

# ╭───────────────────────────────╮
# │     Git + Tools Precheck      │
# ╰───────────────────────────────╯
info "Checking Git..."
command -v git >/dev/null || {
  info "Installing Git..."
  sudo apt update && sudo apt install -y git || error "Failed to install Git"
}
info "Git version: $(git --version)"

NAME=$(git config --global user.name || true)
EMAIL=$(git config --global user.email || true)
[[ -z "$NAME" || -z "$EMAIL" ]] && {
  info "Setting Git identity..."
  git config --global user.name "$DEFAULT_NAME"
  git config --global user.email "$DEFAULT_EMAIL"
}
info "Git identity: $(git config --global user.name) <$(git config --global user.email)>"

# ╭───────────────────────────────╮
# │     Radicle CLI Setup         │
# ╰───────────────────────────────╯
if [ ! -x "$RAD_BIN" ]; then
  info "Installing Radicle CLI..."
  sudo apt install -y curl jq unzip || error "Missing dependencies"
  curl -sSf https://radicle.xyz/install | sh || error "Radicle install failed"
fi

export PATH="$HOME/.radicle/bin:$PATH"
if ! grep -Fxq "export PATH=\"$HOME/.radicle/bin:\$PATH\"" "$PROFILE_FILE"; then
  echo "export PATH=\"$HOME/.radicle/bin:\$PATH\"" >> "$PROFILE_FILE"
  info "→ Added PATH to $PROFILE_FILE"
  warn "→ Run 'source $PROFILE_FILE' to make Radicle CLI persistent"
fi

command -v rad >/dev/null || error "Radicle CLI still unavailable. Try restarting terminal."
info "Radicle CLI ready: $(rad --version)"

# ╭────────────────────────────────────────────────────╮
# │     Restore or Create Radicle Identity & Backup    │
# ╰────────────────────────────────────────────────────╯
mkdir -p "$(dirname "$RAD_BACKUP")"
if [ ! -f "$RAD_KEYS" ]; then
  if [ -f "$RAD_BACKUP" ]; then
    info "Restoring Radicle identity from backup..."
    cp "$RAD_BACKUP" "$RAD_KEYS" || error "Failed to restore identity"
  else
    info "Creating new Radicle identity..."
    rad auth || error "Identity creation failed"
    cp "$RAD_KEYS" "$RAD_BACKUP" || warn "Backup of identity failed"
  fi
else
  info "Radicle identity already exists."
fi

# ╭───────────────────────────────╮
# │        Start Rad Node         │
# ╰───────────────────────────────╯
pgrep -f "rad node start" >/dev/null || {
  info "Starting Radicle node..."
  nohup rad node start > /dev/null 2>&1 &
  sleep 3
}

# ╭───────────────────────────────╮
# │  Ensure Public Seed is Added │
# ╰───────────────────────────────╯
if [ -f "$RAD_CONFIG" ]; then
  if ! grep -q "$SEED_DOMAIN" "$RAD_CONFIG"; then
    info "Adding public seed node '$SEED_DOMAIN' to config..."
    TMP=$(mktemp)
    jq --arg seed "$SEED_DOMAIN" '
      .seeds = (.seeds // []) + [$seed] |
      .seeds |= unique
    ' "$RAD_CONFIG" > "$TMP" && mv "$TMP" "$RAD_CONFIG"
    info "✓ Seed added. Restarting Radicle node..."
    pkill -f "rad node" || true
    nohup rad node start > /dev/null 2>&1 &
    sleep 3
  else
    info "✓ Public seed '$SEED_DOMAIN' already configured."
  fi
else
  warn "⚠️ Radicle config not found. Skipping seed injection."
fi

# ╭───────────────────────────────╮
# │     Git Repo Initialization   │
# ╰───────────────────────────────╯
if [ ! -d .git ]; then
  git init
  git add . || warn "Nothing to add"
  git commit -m "Initial commit" || warn "Nothing to commit"
else
  info "Git repo already initialized."
fi

# ╭───────────────────────────────╮
# │   Radicle Project Registration│
# ╰───────────────────────────────╯
if ! rad projects | grep -q "$PROJECT_NAME"; then
  info "Registering Radicle project '$PROJECT_NAME'..."
  rad init --name "$PROJECT_NAME" --description "Radicle sovereign repo for $PROJECT_NAME" || warn "Repo may already exist"
else
  info "Project '$PROJECT_NAME' already registered."
fi

# ╭───────────────────────────────╮
# │    Push Current Commit Logic  │
# ╰───────────────────────────────╯
CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
CURRENT_COMMIT=$(git rev-parse HEAD)
LAST_PUSHED_COMMIT=$(cat "$PUSH_STATE_FILE" 2>/dev/null || echo "none")

if [[ "$CURRENT_COMMIT" == "$LAST_PUSHED_COMMIT" ]]; then
  info "✓ Already pushed commit: $CURRENT_COMMIT"
else
  info "Pushing commit '$CURRENT_COMMIT' on branch '$CURRENT_BRANCH'..."
  if git push rad "$CURRENT_BRANCH"; then
    echo "$CURRENT_COMMIT" > "$PUSH_STATE_FILE"
    info "✓ Pushed to Radicle successfully"
  else
    warn "Push may have failed — check 'rad sync status'"
  fi
fi

# ╭───────────────────────────────╮
# │         Final Output Block    │
# ╰───────────────────────────────╯
RAD_SELF=$(rad self --json 2>/dev/null || echo '{}')
if echo "$RAD_SELF" | jq empty >/dev/null 2>&1; then
  PROJECT_ID=$(echo "$RAD_SELF" | jq -r '.projectId // empty')
  PEER_ID=$(echo "$RAD_SELF" | jq -r '.peerId // empty')
else
  warn "rad self returned non-JSON output."
  PROJECT_ID=""
  PEER_ID=""
fi

[[ -n "$PROJECT_ID" ]] && {
  info "✓ Project ID: $PROJECT_ID"
  info "→ Peer ID: $PEER_ID"

  echo "" > .radicle-link.md
  echo "# 🌱 Sovereign Radicle Project Metadata" >> .radicle-link.md
  echo "**Project Name:** $PROJECT_NAME" >> .radicle-link.md
  echo "**Commit:** $CURRENT_COMMIT" >> .radicle-link.md
  echo "**Branch:** $CURRENT_BRANCH" >> .radicle-link.md
  echo "**Project ID:** \\`rad:$PROJECT_ID\\`" >> .radicle-link.md
  echo "**Peer ID:** \\`$PEER_ID\\`" >> .radicle-link.md
  echo "**Generated:** $(date --iso-8601=seconds)" >> .radicle-link.md
  echo "**Platform:** $(uname -a)" >> .radicle-link.md
  echo "**User:** $(whoami)@$(hostname)" >> .radicle-link.md

  echo -e "\n## 🌐 Public Gateway URLs" >> .radicle-link.md
  echo "- [Radicle Garden](https://app.radicle.xyz/nodes/seed.radicle.garden/rad:$PROJECT_ID)" >> .radicle-link.md
  echo "- [Kairos Seed](https://app.radicle.xyz/nodes/kairos-seed.thefoldwithin.earth/rad:$PROJECT_ID)" >> .radicle-link.md
  echo "- [Direct Access](https://app.radicle.network/rad:$PROJECT_ID)" >> .radicle-link.md

  info "→ Metadata written to .radicle-link.md"
}
