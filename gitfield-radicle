#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

PROJECT_NAME=$(basename "$(pwd)")
DEFAULT_NAME="Mark Randall Havens"
DEFAULT_EMAIL="mark.r.havens@gmail.com"
MARKDOWN_FILE=".radicle-link.md"
SCRIPT_VERSION="1.0"

RAD_HOME="$HOME/.radicle"
RAD_BIN="$RAD_HOME/bin/rad"
RAD_KEYS="$RAD_HOME/keys.json"
RAD_BACKUP=".radicle-backup/keys.json"
RAD_PATH_LINE='export PATH="$HOME/.radicle/bin:$PATH"'
PROFILE_FILE="$HOME/.bashrc"
PUSH_STATE_FILE=".radicle-push-state"

info()  { echo -e "\e[1;34m[INFO]\e[0m $*"; }
warn()  { echo -e "\e[1;33m[WARN]\e[0m $*"; }
error() { echo -e "\e[1;31m[ERROR]\e[0m $*" >&2; exit 1; }

command -v git >/dev/null || {
  sudo apt update && sudo apt install -y git || error "Failed to install Git"
}

NAME=$(git config --global user.name || true)
EMAIL=$(git config --global user.email || true)
[[ -z "$NAME" || -z "$EMAIL" ]] && {
  git config --global user.name "$DEFAULT_NAME"
  git config --global user.email "$DEFAULT_EMAIL"
}

if [ ! -x "$RAD_BIN" ]; then
  sudo apt install -y curl jq unzip || error "Missing dependencies"
  curl -sSf https://radicle.xyz/install | sh || error "Radicle install failed"
fi

export PATH="$HOME/.radicle/bin:$PATH"
grep -Fxq "$RAD_PATH_LINE" "$PROFILE_FILE" || echo "$RAD_PATH_LINE" >> "$PROFILE_FILE"
command -v rad >/dev/null || error "Radicle CLI unavailable"

mkdir -p "$(dirname "$RAD_BACKUP")"
if [ ! -f "$RAD_KEYS" ]; then
  if [ -f "$RAD_BACKUP" ]; then
    cp "$RAD_BACKUP" "$RAD_KEYS"
  else
    rad auth || error "Identity creation failed"
    cp "$RAD_KEYS" "$RAD_BACKUP" || warn "Backup of identity failed"
  fi
fi

pgrep -f "rad node start" >/dev/null || {
  nohup rad node start > /dev/null 2>&1 &
  sleep 3
}

[ -d .git ] || { git init && git add . && git commit -m "Initial commit"; }

rad projects | grep -q "$PROJECT_NAME" || rad init --name "$PROJECT_NAME" --description "Radicle sovereign repo for $PROJECT_NAME" || warn "Repo may already exist"

CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
CURRENT_COMMIT=$(git rev-parse HEAD)
LAST_PUSHED_COMMIT=$(cat "$PUSH_STATE_FILE" 2>/dev/null || echo "none")

if [[ "$CURRENT_COMMIT" != "$LAST_PUSHED_COMMIT" ]]; then
  if git push rad "$CURRENT_BRANCH"; then
    echo "$CURRENT_COMMIT" > "$PUSH_STATE_FILE"
  else
    warn "Push may have failed"
  fi
fi

# 🛡 Safe JSON fallback
RAD_SELF=$(rad self --json 2>/dev/null || echo '{}')
if echo "$RAD_SELF" | jq empty >/dev/null 2>&1; then
  PROJECT_ID=$(echo "$RAD_SELF" | jq -r '.projectId // empty')
  PEER_ID=$(echo "$RAD_SELF" | jq -r '.peerId // empty')
else
  warn "rad self output is not valid JSON"
  PROJECT_ID=""
  PEER_ID=""
fi

REMOTE_SERVERS=$(rad node status 2>/dev/null | grep 'connected to' || echo "Unavailable")
RAD_GATEWAY_URL=""
[[ -n "$PROJECT_ID" ]] && RAD_GATEWAY_URL="https://app.radicle.network/${PROJECT_ID#rad:}"

# 📦 Metadata
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
REPO_PATH=$(pwd)
LATEST_SHA=$(git rev-parse HEAD)
LAST_COMMIT_MSG=$(git log -1 --pretty=format:"%s")
LAST_COMMIT_DATE=$(git log -1 --pretty=format:"%ad")
LAST_COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an <%ae>")
TOTAL_COMMITS=$(git rev-list --count HEAD)
TRACKED_FILES=$(git ls-files | wc -l)
UNCOMMITTED=$(if ! git diff --quiet || ! git diff --cached --quiet; then echo "Yes"; else echo "No"; fi)
LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "None")
HOSTNAME=$(hostname)
CURRENT_USER=$(whoami)
TIMEZONE=$(date +%Z)
OS_NAME=$(uname -s)
KERNEL_VERSION=$(uname -r)
ARCHITECTURE=$(uname -m)
OS_PRETTY_NAME=$(grep PRETTY_NAME /etc/os-release 2>/dev/null | cut -d= -f2 | tr -d '"') || OS_PRETTY_NAME="Unknown"
DOCKER_CHECK=$(grep -qE '/docker|/lxc' /proc/1/cgroup 2>/dev/null && echo "Yes" || echo "No")
WSL_CHECK=$(grep -qi microsoft /proc/version 2>/dev/null && echo "Yes" || echo "No")
VM_CHECK=$(systemd-detect-virt 2>/dev/null || echo "Unknown")
UPTIME=$(uptime -p 2>/dev/null || echo "Unknown")
MAC_ADDR=$(ip link | awk '/ether/ {print $2}' | head -n 1)
LOCAL_IP=$(hostname -I | awk '{print $1}')
CPU_MODEL=$(grep -m1 'model name' /proc/cpuinfo | cut -d: -f2 | sed 's/^ //')
RAM_GB=$(awk '/MemTotal/ {printf "%.2f", $2/1024/1024}' /proc/meminfo)

# 🧾 Markdown output
cat > "$MARKDOWN_FILE" <<EOF
# 🔗 Radicle Repository Link

- **Project Name**: \`$PROJECT_NAME\`
- **Project ID**: \`$PROJECT_ID\`
- **Peer ID**: \`$PEER_ID\`
- **Local Repo Path**: \`$REPO_PATH\`
- **Default Branch**: \`$CURRENT_BRANCH\`
- **Timestamp**: \`$TIMESTAMP\`
- **Public Gateway URL**: [${RAD_GATEWAY_URL:-Unavailable}](${RAD_GATEWAY_URL:-#})

---

## 📦 Commit Info

- **Last Commit SHA**: \`$LATEST_SHA\`
- **Commit Message**: \`$LAST_COMMIT_MSG\`
- **Commit Author**: \`$LAST_COMMIT_AUTHOR\`
- **Commit Date**: \`$LAST_COMMIT_DATE\`

---

## 📊 Repo Status

- **Total Commits**: \`$TOTAL_COMMITS\`
- **Tracked Files**: \`$TRACKED_FILES\`
- **Uncommitted Changes**: \`$UNCOMMITTED\`
- **Latest Tag**: \`$LATEST_TAG\`

---

## 🧽 Environment

- **Host Machine**: \`$HOSTNAME\`
- **Current User**: \`$CURRENT_USER\`
- **Time Zone**: \`$TIMEZONE\`
- **Script Version**: \`v$SCRIPT_VERSION\`

---

## 🧬 Hardware & OS Fingerprint

- **OS Name**: \`$OS_NAME\`
- **OS Version**: \`$OS_PRETTY_NAME\`
- **Kernel Version**: \`$KERNEL_VERSION\`
- **Architecture**: \`$ARCHITECTURE\`
- **Running in Docker**: \`$DOCKER_CHECK\`
- **Running in WSL**: \`$WSL_CHECK\`
- **Virtual Machine**: \`$VM_CHECK\`
- **System Uptime**: \`$UPTIME\`
- **MAC Address**: \`$MAC_ADDR\`
- **Local IP**: \`$LOCAL_IP\`
- **CPU Model**: \`$CPU_MODEL\`
- **Total RAM (GB)**: \`$RAM_GB\`

---

## 🌐 Radicle Network Info

- **Connected Servers**:
\`\`\`
$REMOTE_SERVERS
\`\`\`
- **Public Gateway URL**: [${RAD_GATEWAY_URL:-Unavailable}](${RAD_GATEWAY_URL:-#})

---

_Auto-generated by \`gitfield-radicle\` push script._
EOF

git add "$MARKDOWN_FILE"
git commit -m "Radicle metadata link commit at $TIMESTAMP" || warn "No changes to commit"

# ✅ Output Summary
echo -e "\n✅ Radicle metadata written."
echo -e "→ Project ID: ${PROJECT_ID:-Unavailable}"
echo -e "→ Peer ID: ${PEER_ID:-Unavailable}"
[[ -n "$RAD_GATEWAY_URL" ]] && echo -e "🔗 View in Radicle Gateway: $RAD_GATEWAY_URL"
